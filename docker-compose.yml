version: '3.8'

volumes:
  it_start_database_volume:
  it_start_redis_volume:

services:

  it_start_redis:
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 60s
      retries: 5
    image: redis:7.2.1-alpine
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped
    volumes:
      - it_start_redis_volume:/data/

  it_start_pg_database:
    env_file:
      - app/src/config/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
    image: postgres:12.16-alpine3.18
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped
    volumes:
      - it_start_database_volume:/var/lib/postgresql/data/

  it_start_pg_admin:
    depends_on:
      - it_start_pg_database
    env_file:
      - app/src/config/.env
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    restart: unless-stopped

  it_start_backend:
    build:
      context: app
      dockerfile: Dockerfile
    command: sh -c "python ./src/main.py"
    depends_on:
      - it_start_redis
      - it_start_pg_database
    env_file:
      - app/src/config/.env
    volumes:
      - ./app:/app
    restart: unless-stopped

  it_start_gateway:
    depends_on:
      - it_start_backend
    image: nginx:1.21.3-alpine
    ports:
      - "8000:80"
    restart: unless-stopped
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
